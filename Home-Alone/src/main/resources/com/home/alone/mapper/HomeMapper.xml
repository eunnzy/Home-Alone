<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 
 <mapper namespace="com.home.alone.mapper.HomeMapper">
 	
 	<!-- 매물 기본 정보 삽입  -->
 	 <insert id="insertHome"  parameterType="com.home.alone.vo.HomeVO">
 		insert into Home_tb(home_num, home_type, addr1, addr2, addr3, latitude, longitude, home_area, rent_type, rent_periods,
 						rent_unit, room_count, floor, total_floor ,home_title, home_detail, lessor_id) 
 		values((select nvl(max(home_num), 0) + 1 from Home_tb), #{homeType}, #{addr1}, #{addr2}, #{addr3}, #{latitude}, #{longitude}, #{homeArea},
 				 #{rentType}, #{rentPeriods}, #{rentUnit}, #{roomCount}, #{floor}, #{totalFloor}, #{homeTitle}, #{homeDetail}, #{lessorId})
 		<selectKey keyProperty="homeNum" resultType="com.home.alone.vo.HomeVO"  order="AFTER">	 <!-- 삽입 후 매물 번호 반환 -->
 			select Max(home_num) as homeNum From Home_tb
 		</selectKey>
 	</insert>
 	
 	<!-- 매물 옵션 정보 삽입 -->
 	<insert id="insertHomeOption" parameterType="com.home.alone.vo.HomeOptionVO">
 	insert into Home_Option_tb(home_num, option_list)
 		values(#{homeNum}, #{optionList})
 	</insert>
 	
 	<!-- 매물 추가 정보 삽입 -->
 	<insert id="insertHomeAddInfo" parameterType="com.home.alone.vo.HomeAddInfoVO">
 		insert into Home_AddInfo_tb(home_num, parking, pet, balcony, elevator, move_date)
 		values(#{homeNum}, #{parking}, 
	 		<if test='pet != "Y" '> 'N', </if>
	 		<if test='pet == "Y" '> #{pet}, </if>
	 		<if test='balcony != "Y" '> 'N', </if>
	 		<if test='balcony == "Y" '> #{balcony}, </if>
	 		<if test='elevator != "Y" '> 'N', </if>
	 		<if test='elevator == "Y" '> #{elevator}, </if>
 			#{moveDate} ) 
 	</insert>
 	
 	<!--  매물 이미지 삽입 -->
 	<insert id="insertHomeImgList" parameterType="java.util.List">
 		<foreach collection="list" item="item" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
 		into Home_Img_tb(img_num, home_num, home_img_name, home_img_path, home_img_uuid) 
 		values
 		((select nvl(max(img_num), 0) + 1 from Home_Img_tb),#{item.homeNum}, #{item.homeImgName}, #{item.homeImgPath}, #{item.homeImgUuid})
 		</foreach>
 	</insert>
 	
 	<!-- 매물 가격 정보 삽입 -->
 	<insert id="insertHomePrice" parameterType="com.home.alone.vo.HomePriceVO">
 		insert into Home_Price_tb(home_num, deposit, monthly, admin_cost)  
 		values (#{homeNum}, #{deposit}, #{monthly}, #{adminCost})
 	</insert>
 		
	<!-- 매물 사진 삽입  -->
 	<insert id="insertHomeImg" parameterType="com.home.alone.vo.HomeImgVO">
 		<foreach collection="list" item="item" index="index" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
 		insert into Home_Img_tb(img_num, home_num, home_img_name, home_img_path, home_img_uuid) 
 		values((select nvl(max(img_num), 0) + 1 from Home_Img_tb), #{item.homeNum}, #{item.homeImgName}, #{item.homeImgPath}, #{item.homeImgUuid})
 		</foreach>
 	</insert>
 	
 	<!-- 매물 신고 정보 삽입 -->
	<insert id="insertHomeReport" parameterType="com.home.alone.vo.HomeReportVO">
		insert into Home_Report_tb(report_num, home_num, imcha_id, report_type, report_content) 
		values ((select nvl(max(report_num), 0) + 1 from Home_Report_tb), #{homeNum}, #{imchaId}, #{reportType}, #{reportContent} )
	</insert>
	
	
	<!-- 지도 경계 내 매물 리스트 반환 -->
	<select id="selectHomeInBoundsList" resultType="com.home.alone.vo.HomeOverviewVO" parameterType="hashmap"> 
			select  <![CDATA[/*+ INDEX(Home_tb home_pk) */]]> home_num AS homeNum, home_type AS homeType, addr1, addr2, addr3, latitude, longitude,  home_area AS homeArea, 
			   rent_type AS rentType, deposit, monthly, rent_periods AS rentPeriods, room_count AS roomCount, admin_cost AS adminCost, 
			   parking, pet, elevator, balcony, move_date as moveDate, floor, home_title AS homeTitle, home_detail AS homeDetail, lessor_id AS lessorId
			from Home_tb 
			join Home_AddInfo_tb using(home_num)
			join Home_Price_tb using(home_num) 
			where (latitude Between #{swLat} and #{neLat}) and (longitude Between #{swLng} and #{neLng}) and home_valid=1
	</select>
	
	<!--  매물 필터 검색 -->
	<select id="selectHomeListByFilter" parameterType="hashmap" resultType="com.home.alone.vo.HomeOverviewVO">	
		select <![CDATA[/*+ INDEX(Home_tb home_pk)*/]]> home_num AS homeNum, home_type AS homeType, addr1, addr2, addr3, latitude, longitude,  home_area AS homeArea, 
			   rent_type AS rentType, deposit, monthly, rent_periods AS rentPeriods, room_count AS roomCount, admin_cost AS adminCost, 
			   parking, pet, elevator, balcony, move_date as moveDate, floor, home_title AS homeTitle, home_detail AS homeDetail, lessor_id AS lessorId
		from Home_tb 
			join Home_AddInfo_tb using(home_num)
			join Home_Price_tb using(home_num) 
			join Home_Option_tb using(home_num) 
		where (latitude Between #{swLat} and #{neLat}) and (longitude Between #{swLng} and #{neLng}) and home_valid=1
		<choose>
			<when test="homeType.size != 0">
				and home_type in 
				<foreach item="item" collection="homeType" open="(" separator="," close=")">
				#{item}
				</foreach>
				<if test="rentType.size != 0">
					and rent_type in 
					<foreach item="item" collection="rentType" open="(" separator="," close=")">
					#{item}
					</foreach>
				</if>
				<if test="deposit != null">
					and deposit &lt; #{deposit}
				</if>
				<if test="monthly != null">
					and monthly &lt; #{monthly}
				</if>
				<if test="optionList.size != 0">
					<foreach item="item" collection="optionList" >
					and option_list like '%'||#{item}||'%'
					</foreach>
				</if>
				<if test='addInfo != null'>
					<if test='addInfo.parking gt 0 '>
						and parking &gt; 0
					</if>
					<if test='addInfo.pet == "Y" '>
						and pet = #{addInfo.pet}
					</if>
					<if test='addInfo.elevator == "Y" '>
						and elevator = #{addInfo.elevator}
					</if>
					<if test='addInfo.balcony == "Y" '>
						and balcony = #{addInfo.balcony}
					</if>
				</if>
			</when>
			<when test="rentType.size != 0">
				and rent_type in 
				<foreach item="item" collection="rentType" open="(" separator="," close=")">
				#{item}
				</foreach>
				<if test="deposit != null">
				and deposit &lt; #{deposit}
				</if>
				<if test="monthly != null">
					and monthly &lt; #{monthly}
				</if>
				<if test="optionList.size != 0">
					<foreach item="item" collection="optionList">
					and option_list like '%'||#{item}||'%'
					</foreach>
				</if>
				<if test='addInfo != null'>
					<if test='addInfo.parking gt 0 '>
						and parking &gt; 0
					</if>
					<if test='addInfo.pet == "Y" '>
						and pet = #{addInfo.pet}
					</if>
					<if test='addInfo.elevator == "Y" '>
						and elevator = #{addInfo.elevator}
					</if>
					<if test='addInfo.balcony == "Y" '>
						and balcony = #{addInfo.balcony}
					</if>
				</if>
			</when>
			<when test="deposit != null">
				and deposit &lt; #{deposit}
				<if test="monthly != null">
					and monthly &lt; #{monthly}
				</if>
				<if test="optionList.size != 0">
					<foreach item="item" collection="optionList">
					and option_list like '%'||#{item}||'%'
					</foreach>
				</if>
				<if test='addInfo != null'>
					<if test='addInfo.parking gt 0 '>
						and parking &gt; 0
					</if>
					<if test='addInfo.pet == "Y" '>
						and pet = #{addInfo.pet}
					</if>
					<if test='addInfo.elevator == "Y" '>
						and elevator = #{addInfo.elevator}
					</if>
					<if test='addInfo.balcony == "Y" '>
						and balcony = #{addInfo.balcony}
					</if>
				</if>
			</when>
			<when test="monthly != null">
				and monthly &lt; #{item}
				<if test="optionList.size != 0">
					<foreach item="item" collection="optionList">
					and option_list like '%'||#{item}||'%'
					</foreach>
				</if>
				<if test='addInfo != null'>
					<if test='addInfo.parking gt 0 '>
						and parking &gt; 0
					</if>
					<if test='addInfo.pet == "Y" '>
						and pet = #{addInfo.pet}
					</if>
					<if test='addInfo.elevator == "Y" '>
						and elevator = #{addInfo.elevator}
					</if>
					<if test='addInfo.balcony == "Y" '>
						and balcony = #{addInfo.balcony}
					</if>
				</if>
			</when>
			<when test="optionList.size != 0">
				<foreach item="item" collection="optionList" >
				and option_list like '%'||#{item}||'%'
				</foreach>
				<if test='addInfo != null'>
					<if test='addInfo.parking gt 0 '>
						and parking &gt; 0
					</if>
					<if test='addInfo.pet == "Y" '>
						and pet = #{addInfo.pet}
					</if>
					<if test='addInfo.elevator == "Y" '>
						and elevator = #{addInfo.elevator}
					</if>
					<if test='addInfo.balcony == "Y" '>
						and balcony = #{addInfo.balcony}
					</if>
				</if>
			</when>
			<when test='addInfo != null'>
				<if test='addInfo.parking gt 0 '>
					and parking &gt; 0
				</if>
				<if test='addInfo.pet == "Y" '>
					and pet = #{addInfo.pet}
				</if>
				<if test='addInfo.elevator == "Y" '>
					and elevator = #{addInfo.elevator}
				</if>
				<if test='addInfo.balcony == "Y" '>
					and balcony = #{addInfo.balcony}
				</if>
			</when>
		</choose>
	</select>
	
 	<!-- 매물 상세 정보 조회 -->
 	<select id="selectHomeDetail" resultType="com.home.alone.vo.HomeDetailVO">
		select  home_num AS homeNum, home_type AS homeType, addr1, addr2, addr3, latitude, longitude,  home_area AS homeArea, 
			   rent_type AS rentType, deposit, monthly, rent_periods AS rentPeriods, rent_unit AS rentUnit, room_count AS roomCount, 
			   admin_cost AS adminCost, floor, total_floor AS totalFloor, home_title AS homeTitle, home_detail AS homeDetail, 
			   lessor_id AS lessorId, jgs_name AS jgsName, jgs_num AS jgsNum, phone, name, lessor_addr1 as lessorAddr1, 
               lessor_addr2 as lessorAddr2, lessor_addr3 as lessorAddr3 
		from Home_tb 
			join Home_Price_tb using(home_num) 
			join lessor_tb using (lessor_id)
		where home_num = #{homeNum}
	</select>
	
	<!-- 매물 옵션 정보 조회 -->
	<select id="selectHomeOption" resultType="com.home.alone.vo.HomeOptionVO">
 		select option_list as optionList
 		from Home_Option_tb
 		where home_num = #{homeNum}
 	</select>
	
 	<!-- 매물 추가 정보 조회-->
 	<select id="selectHomeAddInfo" resultType="com.home.alone.vo.HomeAddInfoVO"> 
 		select parking, pet, balcony, elevator, move_date AS moveDate 
 		from Home_AddInfo_tb
 		where home_num = #{homeNum}
 	</select>
	
	<!-- 매물 사진 리스트 조회-->
 	<select id="selectHomeImgList" resultType="com.home.alone.vo.HomeImgVO">	
 		select  <![CDATA[/*+ INDEX(Home_Img_tb home_img_pk) */]]> home_num AS homeNum, home_img_name AS homeImgName, home_img_path AS homeImgPath, 
 				home_img_uuid as homeImgUuid  
 		from Home_Img_tb where home_num = #{homeNum}
 	</select>
	
	<select id="selectHomeNumByOptionCheck" resultType="java.lang.Integer" parameterType="java.util.List">
 			select  <![CDATA[distinct]]> home_num As homeNum from Home_option_tb 
 			where option_name in 
 			<foreach collection="list" item="item" index="index" separator="," open="(" close=")">
			#{item}
 		</foreach>
	</select>
	

 	<!-- 미리보기 사진으로 쓸 매물 사진 조회 -->
	<select id="selectPreviewHomeImg" resultType="com.home.alone.vo.HomeImgVO"> 
			select home_num AS homeNum, home_img_name AS homeImgName, home_img_path AS homeImgPath, home_img_uuid as homeImgUuid   
			from (select <![CDATA[/*+ INDEX(Home_Img_tb home_img_pk) */]]>   * from Home_Img_tb where home_num = #{homeNum})
			where <![CDATA[ rownum <2 ]]>
	</select>
	
	<select id="selectHomeListByLessorId" resultType="com.home.alone.vo.HomeOverviewVO">
 		select  home_num AS homeNum, home_type AS homeType, addr1, addr2, addr3, latitude, longitude,
					rent_type AS rentType, deposit, monthly, rent_periods AS rentPeriods, rent_unit as rentUnit, admin_cost AS adminCost, 
					home_title AS homeTitle, home_valid AS homeValid, lessor_id AS lessorId
		from Home_tb
			join Home_Price_tb using(home_num)
		where lessor_id=#{lessorId, jdbcType=VARCHAR}
 	</select>
 	
 	
  	<select id="selectReportHomeList" resultType="com.home.alone.vo.HomeReportVO">	<!-- 매물 신고 리스트 -->
 		select report_num AS reportNum, home_num AS homeNum, imcha_id AS imchaId, report_type AS reportType, report_content AS reportContent, report_regdate AS reportRegDate, home_valid AS homeValid 
 		from Home_Report_tb 
 			join Home_tb using(home_num) 
 	</select>

	
 	<!-- 매물 기본 정보 테이블 수정 -->
 	<update id="updateHome" parameterType="com.home.alone.vo.HomeVO">
 		update Home_tb 
 		set home_type=#{homeType}, addr1=#{addr1}, addr2=#{addr2}, addr3=#{addr3}, 
 			latitude=#{latitude}, longitude = #{longitude}, home_area = #{homeArea}, rent_type=#{rentType},
 			rent_periods=#{rentPeriods}, rent_unit=#{rentUnit}, room_count=#{roomCount}, floor=#{floor}, total_floor=#{totalFloor}, 
 			home_title=#{homeTitle}, home_detail=#{homeDetail}
 		where home_num=#{homeNum}
 		
 	</update>
 	
 	<!-- 매물 추가 정보 테이블 수정 -->
 	<update id="updateHomeAddInfo" parameterType="com.home.alone.vo.HomeAddInfoVO">
 		update Home_AddInfo_tb
 		set parking=#{parking}, 
	 		<if test='pet != "Y" '> pet='N', </if>
	 		<if test='pet == "Y" '> pet=#{pet}, </if>
	 		<if test='balcony != "Y" '> balcony='N', </if>
	 		<if test='balcony == "Y" '> balcony=#{balcony}, </if>
	 		<if test='elevator != "Y" '> elevator='N', </if>
	 		<if test='elevator == "Y" '> elevator=#{elevator}, </if>
 			move_date=#{moveDate} 
 		where home_num = #{homeNum}
 	</update>
 	
 	<!-- 매물 옵션 정보 테이블 수정 -->
 	<update id="updateHomeOption" parameterType="com.home.alone.vo.HomeOptionVO">
 		update Home_Option_tb
 		set option_list=#{optionList}
 		where home_num = #{homeNum}
 	</update>
 	
 	
 	<!-- 매물 가격 정보 테이블 수정 -->
 	<update id="updateHomePrice" parameterType="com.home.alone.vo.HomePriceVO">
 		update Home_Price_tb set deposit = #{deposit}, monthly = #{monthly}, admin_cost = #{adminCost} where home_num = #{homeNum}
 	</update>
 	
 	<!-- 매물 게시 중단 상태 변경 -->
 	<update id="updateHomeInvalid" parameterType="com.home.alone.vo.HomePriceVO">	
 		update Home_tb set home_valid = 0 where home_num = #{homeNum}
 	</update>
 	
 	<!-- 매물 게시중 상태 변경 -->
 	<update id="updateHomeValid" parameterType="com.home.alone.vo.HomePriceVO">	
 		update Home_tb set home_valid = 1 where home_num = #{homeNum}
 	</update>
 	
 	<!-- 매물 신고 받으면 게시 중단 -->
 	<update id="updateHomeValidStop" parameterType="com.home.alone.vo.HomePriceVO">	
 		update Home_tb set home_valid = 2 where home_num = #{homeNum}
 	</update>
 	
 	<!-- 매물 사진 삭제 -->
 	<delete id="deleteHomeImg">	
		delete from Home_Img_tb where home_num = #{homeNum}
	</delete>
 	
 	<!-- 매물 정보 삭제 외래키 설정으로 해당 매물에 관련 테이불 모두 삭제 -->
 	<delete id="deleteHome">	
 		delete from Home_tb where home_num = #{homeNum}
 	</delete>
 	
 </mapper>
 
 